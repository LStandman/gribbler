-- SPDX-License-Identifier: GPL-3.0-or-later
-- Crypt/SHA512Test.hs: Unit tests for SHA512
-- Copyright (C) 2024 LStandman

module Crypt.SHA512Test (testSha512) where

import qualified Crypt.SHA512 as SHA512
import Data.List
import Data.Word
import Libtest
import Misc.MemUtils

{- ORMOLU_DISABLE -}
testSha512 =
  let --  SHA512 test vectors from NIST.
      t1_message = strBytes ""
      t1_size = 0
      t1_digest =
        [ 0xCF, 0x83, 0xE1, 0x35, 0x7E, 0xEF, 0xB8, 0xBD,
          0xF1, 0x54, 0x28, 0x50, 0xD6, 0x6D, 0x80, 0x07,
          0xD6, 0x20, 0xE4, 0x05, 0x0B, 0x57, 0x15, 0xDC,
          0x83, 0xF4, 0xA9, 0x21, 0xD3, 0x6C, 0xE9, 0xCE,
          0x47, 0xD0, 0xD1, 0x3C, 0x5D, 0x85, 0xF2, 0xB0,
          0xFF, 0x83, 0x18, 0xD2, 0x87, 0x7E, 0xEC, 0x2F,
          0x63, 0xB9, 0x31, 0xBD, 0x47, 0x41, 0x7A, 0x81,
          0xA5, 0x38, 0x32, 0x7A, 0xF9, 0x27, 0xDA, 0x3E
        ]
      t2_message = strBytes "abc"
      t2_size = 3
      t2_digest =
        [ 0xDD, 0xAF, 0x35, 0xA1, 0x93, 0x61, 0x7A, 0xBA,
          0xCC, 0x41, 0x73, 0x49, 0xAE, 0x20, 0x41, 0x31,
          0x12, 0xE6, 0xFA, 0x4E, 0x89, 0xA9, 0x7E, 0xA2,
          0x0A, 0x9E, 0xEE, 0xE6, 0x4B, 0x55, 0xD3, 0x9A,
          0x21, 0x92, 0x99, 0x2A, 0x27, 0x4F, 0xC1, 0xA8,
          0x36, 0xBA, 0x3C, 0x23, 0xA3, 0xFE, 0xEB, 0xBD,
          0x45, 0x4D, 0x44, 0x23, 0x64, 0x3C, 0xE8, 0x0E,
          0x2A, 0x9A, 0xC9, 0x4F, 0xA5, 0x4C, 0xA4, 0x9F
        ]
      t3_message =
        strBytes
          ( "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn"
              ++ "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
          )
      t3_size = 112
      t3_digest =
        [ 0x8E, 0x95, 0x9B, 0x75, 0xDA, 0xE3, 0x13, 0xDA,
          0x8C, 0xF4, 0xF7, 0x28, 0x14, 0xFC, 0x14, 0x3F,
          0x8F, 0x77, 0x79, 0xC6, 0xEB, 0x9F, 0x7F, 0xA1,
          0x72, 0x99, 0xAE, 0xAD, 0xB6, 0x88, 0x90, 0x18,
          0x50, 0x1D, 0x28, 0x9E, 0x49, 0x00, 0xF7, 0xE4,
          0x33, 0x1B, 0x99, 0xDE, 0xC4, 0xB5, 0x43, 0x3A,
          0xC7, 0xD3, 0x29, 0xEE, 0xB6, 0xDD, 0x26, 0x54,
          0x5E, 0x96, 0xE5, 0x5B, 0x87, 0x4B, 0xE9, 0x09
        ]
   in testsuite
        "SHA512"
        [ test
            "NIST0000"
            [ expectMemEq "t1_digest" t1_digest $ SHA512.sha512Sum t1_message t1_size
            ],
          test
            "NIST0003"
            [ expectMemEq "t2_digest" t2_digest $ SHA512.sha512Sum t2_message t2_size
            ],
          test
            "NIST0112"
            [ expectMemEq "t3_digest" t3_digest $ SHA512.sha512Sum t3_message t3_size
            ]
         ]
